#include<bits/stdc++.h>
#define maxh 20
#define maxn 100005
using namespace std;

int n,m;
int h[maxn];

int Log2[maxn]={-1};
int ST[maxh][maxn];

int dep[maxn],ans[maxn];

int Max(int i,int j)	{
	return (h[i]>h[j]||(h[i]==h[j]&&i<j))?i:j;
}

void init()
{
	scanf("%d%d",&n,&m);
	for (int i=0;i<n;++i)
		scanf("%d",h+i);
		
	for (int i=1;i<=n;++i)	Log2[i]=Log2[i>>1]+1;
	
	for (int i=0;i<n;++i)	ST[0][i]=i;
	for (int j=1;(1<<j)<=n;++j)
		for (int i=0;i+(1<<j)<=n;++i)
			ST[j][i]=Max(ST[j-1][i],ST[j-1][i+(1<<(j-1))]);
}

int find(int l,int r)	{
	int t=Log2[r-l+1];
	return Max(ST[t][l],ST[t][r-(1<<t)+1]);
}

int calc(int l,int r,int d)
{
	if (l>r)	return -1;
	int p=find(l,r);
	
	dep[p]=d;
	int mx=(ans[p]=calc(l,p-1,d+1)+1);
	
	while (p<r)
	{
		int j=find(p+1,r);
		if (h[j]!=h[p])	break;
		dep[j]=d;
		int t=calc(p+1,j-1,d+1)+1;
		mx=max(mx,t);
		ans[p]=max(ans[p],t);
		p=j;
		ans[p]=max(ans[p],t);
	}
	mx=max(mx,ans[p]=max(ans[p],calc(p+1,r,d+1)+1));
	return mx;
}

void solve()
{
	calc(0,n-1,0);
		
	while (m--)
	{
		int x,y,j;
		scanf("%d%d",&x,&y);
		--x,--y;
		
		if (!~y)
			printf("%d\n",ans[x]);
		else
		{
			if (x==y)
				puts("0");
			else
			{
				if (h[x]<h[y])
					swap(x,y);
				if (x<y)
					j=find(x+1,y);
				else
					j=find(y,x-1);
				
				if (h[j]<h[x])
					printf("%d\n",dep[y]-dep[x]);
				else
					puts("0");
			}
		}
	}
}

int main() 
{
	init();
	solve();
}